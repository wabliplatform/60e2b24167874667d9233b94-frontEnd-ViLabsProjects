/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Project model module.
 * @module model/Project
 * @version 1.0.0
 */
class Project {
    /**
     * Constructs a new <code>Project</code>.
     * @alias module:model/Project
     * @param projectTitle {String} 
     * @param projectDuration {Number} 
     * @param projectStartDate {String} 
     * @param projectEndDate {String} 
     * @param projectAbstract {String} 
     */
    constructor(projectTitle, projectDuration, projectStartDate, projectEndDate, projectAbstract) { 
        
        Project.initialize(this, projectTitle, projectDuration, projectStartDate, projectEndDate, projectAbstract);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectTitle, projectDuration, projectStartDate, projectEndDate, projectAbstract) { 
        obj['ProjectTitle'] = projectTitle;
        obj['ProjectDuration'] = projectDuration;
        obj['ProjectStartDate'] = projectStartDate;
        obj['ProjectEndDate'] = projectEndDate;
        obj['ProjectAbstract'] = projectAbstract;
    }

    /**
     * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Project} obj Optional instance to populate.
     * @return {module:model/Project} The populated <code>Project</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Project();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('ProjectTitle')) {
                obj['ProjectTitle'] = ApiClient.convertToType(data['ProjectTitle'], 'String');
            }
            if (data.hasOwnProperty('ProjectDuration')) {
                obj['ProjectDuration'] = ApiClient.convertToType(data['ProjectDuration'], 'Number');
            }
            if (data.hasOwnProperty('ProjectStartDate')) {
                obj['ProjectStartDate'] = ApiClient.convertToType(data['ProjectStartDate'], 'String');
            }
            if (data.hasOwnProperty('ProjectEndDate')) {
                obj['ProjectEndDate'] = ApiClient.convertToType(data['ProjectEndDate'], 'String');
            }
            if (data.hasOwnProperty('ProjectAbstract')) {
                obj['ProjectAbstract'] = ApiClient.convertToType(data['ProjectAbstract'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Project.prototype['_id'] = undefined;

/**
 * @member {String} ProjectTitle
 */
Project.prototype['ProjectTitle'] = undefined;

/**
 * @member {Number} ProjectDuration
 */
Project.prototype['ProjectDuration'] = undefined;

/**
 * @member {String} ProjectStartDate
 */
Project.prototype['ProjectStartDate'] = undefined;

/**
 * @member {String} ProjectEndDate
 */
Project.prototype['ProjectEndDate'] = undefined;

/**
 * @member {String} ProjectAbstract
 */
Project.prototype['ProjectAbstract'] = undefined;






export default Project;

